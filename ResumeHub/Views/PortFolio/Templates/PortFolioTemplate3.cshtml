@model ResumeHub.DTOs.PortfolioJsonDto
@{
    ViewData["Title"] = Model.Title ?? $"{Model.FirstName} {Model.LastName}'s Portfolio";
    Layout = "/Views/Shared/_PortfolioLayout.cshtml";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>
    <!-- Bootstrap 5 CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        :root {
            --primary: #dc2626; /* Bold crimson */
            --primary-light: #f87171; /* Soft red glow */
            --dark: #111827; /* Sleek deep charcoal */
            --light: #f3f4f6; /* Gentle cloud gray */
            --gray: #6b7280; /* Cool neutral */
            --light-gray: #d1d5db; /* Subtle stone */
        }


        body {
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
            color: var(--dark);
            line-height: 1.6;
            background-color: white;
        }

        /* Navigation */
        .navbar {
            background-color: white;
            border-bottom: 1px solid var(--light-gray);
            padding: 1.5rem 0;
        }

        .navbar-brand {
            font-weight: 700;
            color: var(--primary);
            font-size: 1.25rem;
            letter-spacing: -0.5px;
        }

        .nav-link {
            color: var(--dark);
            font-weight: 500;
            margin: 0 0.75rem;
            padding: 0.5rem 0;
            position: relative;
        }

        .nav-link:after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            width: 0;
            height: 2px;
            background: var(--primary);
            transition: width 0.3s ease;
        }

        .nav-link:hover:after, .nav-link.active:after {
            width: 100%;
        }

        /* Hero Section */
        .hero {
            padding: 8rem 0 6rem;
            background-color: #f8fafc;
            text-align: center;
        }

        .profile-img {
            width: 160px;
            height: 160px;
            object-fit: cover;
            border-radius: 50%;
            border: 4px solid white;
            box-shadow: 0 10px 25px rgba(0,0,0,0.1);
            margin-bottom: 2rem;
        }

        .social-links {
            display: flex;
            justify-content: center;
            gap: 1rem;
            margin-top: 1.5rem;
        }

        .social-link {
            width: 40px;
            height: 40px;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 50%;
            color: var(--primary);
            border: 1px solid var(--light-gray);
            transition: all 0.3s ease;
        }

        .social-link:hover {
            background: var(--primary);
            color: white;
            transform: translateY(-3px);
        }

        /* Sections */
        .section {
            padding: 5rem 0;
        }

        .section-title {
            font-weight: 700;
            color: var(--dark);
            margin-bottom: 3rem;
            position: relative;
            display: inline-block;
        }

        .section-title:after {
            content: '';
            position: absolute;
            left: 0;
            bottom: -10px;
            width: 50px;
            height: 3px;
            background: var(--primary);
        }

        /* About Section */
        .about-content {
            max-width: 800px;
            margin: 0 auto;
        }

        /* Skills Section */

        

        :root {
            --primary: #4361ee;
            --primary-light: #4895ef;
            --dark: #1e293b;
            --light: #f8fafc;
            --gray: #64748b;
            --light-gray: #e2e8f0;
        }

        /* Modern Skills Section */
        .skills-section {
            padding: 5rem 0;
            background-color: #f8fafc;
            position: relative;
            overflow: hidden;
        }

        .section-header {
            text-align: center;
            margin-bottom: 3rem;
        }

        .section-title {
            font-size: 2.5rem;
            font-weight: 700;
            color: var(--dark);
            margin-bottom: 0.5rem;
        }

        .highlight {
            background: linear-gradient(90deg, var(--primary), var(--primary-light));
            -webkit-background-clip: text;
            background-clip: text;
            color: transparent;
        }

        .section-subtitle {
            color: var(--gray);
            font-size: 1.1rem;
            max-width: 600px;
            margin: 0 auto;
        }

        .skills-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
            gap: 1.5rem;
            max-width: 1200px;
            margin: 0 auto;
        }

        .skill-card {
            background: white;
            border-radius: 12px;
            padding: 1.75rem;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
            transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
            position: relative;
            overflow: hidden;
            border: 1px solid rgba(0, 0, 0, 0.03);
        }

            .skill-card:hover {
                transform: translateY(-5px);
                box-shadow: 0 15px 30px rgba(67, 97, 238, 0.1);
            }

        .skill-content {
            position: relative;
            z-index: 2;
        }

        .skill-name {
            font-size: 1.25rem;
            font-weight: 600;
            color: var(--dark);
            margin-bottom: 0.75rem;
            line-height: 1.3;
        }

        .skill-type-badge {
            display: inline-block;
            padding: 0.35rem 1rem;
            background: rgba(67, 97, 238, 0.1);
            color: var(--primary);
            border-radius: 50px;
            font-size: 0.85rem;
            font-weight: 500;
            text-transform: capitalize;
        }

        .skill-hover-effect {
            position: absolute;
            bottom: 0;
            left: 0;
            width: 100%;
            height: 4px;
            background: linear-gradient(90deg, var(--primary), var(--primary-light));
            transform: scaleX(0);
            transform-origin: left;
            transition: transform 0.3s ease;
        }

        .skill-card:hover .skill-hover-effect {
            transform: scaleX(1);
        }

        .no-skills-placeholder {
            grid-column: 1 / -1;
            text-align: center;
            padding: 3rem;
            color: var(--gray);
        }

            .no-skills-placeholder i {
                font-size: 3rem;
                margin-bottom: 1rem;
                color: var(--light-gray);
                opacity: 0.5;
            }

            .no-skills-placeholder p {
                font-size: 1.1rem;
                margin: 0;
            }

        /* Responsive Design */
        media (max-width: 992px) {
            .skills-grid

        {
            grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));
        }

        }

        media (max-width: 768px) {
            .section-title

        {
            font-size: 2rem;
        }

        .skills-grid {
            grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
            gap: 1rem;
        }

        }

        media (max-width: 576px) {
            .skills-grid

        {
            grid-template-columns: 1fr;
        }

        .skill-card {
            padding: 1.5rem;
        }

        }

























































        .skills-container {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 2rem;
        }

        .skill-category {
            background: white;
            border-radius: 12px;
            padding: 2rem;
            box-shadow: 0 5px 15px rgba(0,0,0,0.05);
        }

        .skill-item {
            margin-bottom: 1.5rem;
        }

        .skill-name {
            display: flex;
            justify-content: space-between;
            margin-bottom: 0.5rem;
            font-weight: 500;
        }

        .skill-bar {
            height: 6px;
            background: var(--light-gray);
            border-radius: 3px;
            overflow: hidden;
        }

        .skill-progress {
            height: 100%;
            background: var(--primary);
            border-radius: 3px;
            width: 0;
            transition: width 1.5s ease;
        }

        /* Projects Section */
        .projects-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 2rem;
        }

        .project-card {
            background: white;
            border-radius: 12px;
            overflow: hidden;
            box-shadow: 0 5px 15px rgba(0,0,0,0.05);
            transition: all 0.3s ease;
        }

        .project-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 25px rgba(0,0,0,0.1);
        }

        .project-img {
            height: 200px;
            object-fit: cover;
            width: 100%;
        }

        .project-content {
            padding: 1.5rem;
        }

        .project-badge {
            position: absolute;
            top: 1rem;
            right: 1rem;
            background: var(--primary);
            color: white;
            padding: 0.25rem 0.75rem;
            border-radius: 20px;
            font-size: 0.8rem;
            font-weight: 500;
        }

        /* Contact Section */
        .contact-form .form-control {
            border-radius: 8px;
            padding: 0.75rem 1rem;
            border: 1px solid var(--light-gray);
        }

        .contact-form .form-control:focus {
            border-color: var(--primary);
            box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.1);
        }

        /* Footer */
        footer {
            background: var(--dark);
            color: white;
            padding: 4rem 0 2rem;
        }

        .footer-links {
            display: flex;
            flex-direction: column;
            gap: 0.5rem;
        }

        .footer-link {
            color: rgba(255,255,255,0.7);
            text-decoration: none;
            transition: color 0.3s ease;
        }

        .footer-link:hover {
            color: white;
        }

        /* Responsive */
        media (max-width: 768px) {
            .hero {
                padding: 6rem 0 4rem;
            }

            .profile-img {
                width: 120px;
                height: 120px;
            }

            .section {
                padding: 3rem 0;
            }

            .skills-container, .projects-grid {
                grid-template-columns: 1fr;
            }
        }
    </style>
</head>
<body>
    <!-- Navigation -->
    <nav class="navbar navbar-expand-lg navbar-light fixed-top">
        <div class="container">
            <a class="navbar-brand" href="#">@Model.FirstName @Model.LastName</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav ms-auto">
                    <li class="nav-item">
                        <a class="nav-link active" href="#home">Home</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#about">About</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#skills">Skills</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#projects">Projects</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#contact">Contact</a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>

    <!-- Hero Section -->
    <section class="hero" id="home">
        <div class="container">
            @if (!string.IsNullOrEmpty(Model.ImageBase64))
            {
                <img src="data:@Model.ImageContentType;base64,@Model.ImageBase64"
                     alt="@Model.FirstName @Model.LastName"
                     class="profile-img">
            }
            <h1 class="display-4 fw-bold mb-3">@Model.FirstName @Model.LastName</h1>
            <p class="lead text-muted mb-4">@Model.Title</p>
            <div class="social-links">
                @if (!string.IsNullOrEmpty(Model.GitHubLink))
                {
                    <a href="@Model.GitHubLink" class="social-link"><i class="fab fa-github"></i></a>
                }
                @if (!string.IsNullOrEmpty(Model.LinkedinLink))
                {
                    <a href="@Model.LinkedinLink" class="social-link"><i class="fab fa-linkedin-in"></i></a>
                }
                @if (!string.IsNullOrEmpty(Model.Email))
                {
                    <a href="mailto:@Model.Email" class="social-link"><i class="fas fa-envelope"></i></a>
                }
            </div>
        </div>
    </section>

    <!-- About Section -->
    <section class="section" id="about">
        <div class="container">
            <h2 class="section-title">About Me</h2>
            <div class="about-content">
                <p class="lead mb-4">@Model.Summery</p>
                <div class="row mt-5">
                    <div class="col-md-6 mb-4">
                        <h5 class="mb-3">Personal Info</h5>
                        <ul class="list-unstyled">
                            @if (!string.IsNullOrEmpty(Model.Email))
                            {
                                <li class="mb-2"><strong>Email:</strong> @Model.Email</li>
                            }
                            @if (!string.IsNullOrEmpty(Model.PhoneNumber))
                            {
                                <li class="mb-2"><strong>Phone:</strong> @Model.PhoneNumber</li>
                            }
                            @if (!string.IsNullOrEmpty(Model.Address))
                            {
                                <li class="mb-2"><strong>Location:</strong> @Model.Address</li>
                            }
                        </ul>
                    </div>
                    <div class="col-md-6 mb-4">
                        <h5 class="mb-3">Professional Info</h5>
                        <ul class="list-unstyled">
                            <li class="mb-2"><strong>Experience:</strong> 5+ Years</li>
                            <li class="mb-2"><strong>Projects:</strong> 20+ Completed</li>
                            <li class="mb-2"><strong>Availability:</strong> Full-time</li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Skills Section -->
   @*  <section class="section bg-light" id="skills">
        <div class="container">
            <h2 class="section-title">My Skills</h2>
            <div class="skills-container">
                <div class="skill-category">
                    <h4 class="mb-4">Technical Skills</h4>
                    @if (Model.Skills != null && Model.Skills.Any(s => s.SkillType == "Technical"))
                    {
                        foreach (var skill in Model.Skills.Where(s => s.SkillType == "Technical"))
                        {
                            <div class="skill-item">
                                <div class="skill-name">
                                    <span>@skill.SkillName</span>
                                    <span>@skill.SkillType</span>
                                </div>
                                <div class="skill-bar">
                                    <div class="skill-progress" style="width: @skill.SkillType"></div>
                                </div>
                            </div>
                        }
                    }
                </div>
                <div class="skill-category">
                    <h4 class="mb-4">Professional Skills</h4>
                    @if (Model.Skills != null && Model.Skills.Any(s => s.SkillType == "Professional"))
                    {
                        foreach (var skill in Model.Skills.Where(s => s.SkillType == "Professional"))
                        {
                            <div class="skill-item">
                                <div class="skill-name">
                                    <span>@skill.SkillName</span>
                                    <span>@skill.SkillType</span>
                                </div>
                                <div class="skill-bar">
                                    <div class="skill-progress" style="width: @skill.SkillType"></div>
                                </div>
                            </div>
                        }
                    }
                </div>
            </div>
        </div>
    </section> *@


    <section class="skills-section" id="skills">
        <div class="container">
            <div class="section-header">
                <h2 class="section-title">My <span class="highlight">Skills</span></h2>
                <p class="section-subtitle">Technologies and competencies I excel in</p>
            </div>

            <div class="skills-grid">
                @if (Model.Skills != null && Model.Skills.Any())
                {
                    foreach (var skill in Model.Skills)
                    {
                        <div class="skill-card" data-skill-type="@skill.SkillType.ToLower()">
                            <div class="skill-content">
                                <h3 class="skill-name">@skill.SkillName</h3>
                                <span class="skill-type-badge">@skill.SkillType</span>
                            </div>
                            <div class="skill-hover-effect"></div>
                        </div>
                    }
                }
                else
                {
                    <div class="no-skills-placeholder">
                        <i class="fas fa-code-branch"></i>
                        <p>Skills will be displayed here</p>
                    </div>
                }
            </div>
        </div>
    </section>




































    <!-- Projects Section -->
    @if (Model.Projects != null && Model.Projects.Any())
    {
        <section class="section" id="projects">
            <div class="container">
                <h2 class="section-title">My Projects</h2>
                <div class="projects-grid">
                    @foreach (var project in Model.Projects)
                    {
                        <div class="project-card">
                            @if (!string.IsNullOrEmpty(project.ImageBase64))
                            {
                                <img src="data:@project.ImageContentType;base64,@project.ImageBase64"
                                     class="project-img"
                                     alt="@project.ProjectName">
                            }
                            <div class="project-content">
                                <div class="d-flex justify-content-between align-items-start mb-2">
                                    <h4>@project.ProjectName</h4>
                                    @if (project.IsOngoing == true)
                                    {
                                        <span class="badge bg-success">Ongoing</span>
                                    }
                                </div>
                                @if (!string.IsNullOrEmpty(project.StartDate))
                                {
                                    <p class="text-muted small mb-3">
                                        <i class="far fa-calendar-alt me-1"></i>
                                        @project.StartDate
                                        @if (!string.IsNullOrEmpty(project.EndDate) && project.IsOngoing != true)
                                        {
                                            @:- @project.EndDate
                                        }
                                        else if (project.IsOngoing == true)
                                        {
                                            @:- Present
                                        }
                                    </p>
                                }
                                <p class="mb-3">@project.ProjectDescription</p>
                                @if (!string.IsNullOrEmpty(project.ProjectLink))
                                {
                                    <a href="@project.ProjectLink" target="_blank" class="btn btn-sm btn-outline-primary">
                                        View Project
                                    </a>
                                }
                            </div>
                        </div>
                    }
                </div>
            </div>
        </section>
    }

    <!-- Contact Section -->
    <section class="section bg-light" id="contact">
        <div class="container">
            <h2 class="section-title">Get In Touch</h2>
            <div class="row justify-content-center">
                <div class="col-lg-8">
                    <div class="card border-0 shadow-sm">
                        <div class="card-body p-4">
@*                             <form asp-action="Contact" asp-controller="Portfolio" method="post" class="contact-form">
                                <input type="hidden" name="portfolioOwnerEmail" value="@Model.Email" />
                                <input type="hidden" name="portfolioId" value="@Model.Id" />

                                <div class="row">
                                    <div class="col-md-6 mb-3">
                                        <label for="name" class="form-label">Your Name</label>
                                        <input type="text" class="form-control" id="name" required>
                                    </div>
                                    <div class="col-md-6 mb-3">
                                        <label for="email" class="form-label">Your Email</label>
                                        <input type="email" class="form-control" id="email" required>
                                    </div>
                                </div>
                                <div class="mb-3">
                                    <label for="subject" class="form-label">Subject</label>
                                    <input type="text" class="form-control" id="subject" required>
                                </div>
                                <div class="mb-3">
                                    <label for="message" class="form-label">Message</label>
                                    <textarea class="form-control" id="message" rows="5" required></textarea>
                                </div>
                                <button type="submit" class="btn btn-primary">Send Message</button>
                            </form>
 *@                        

                            <form method="post" asp-controller="Portfolio" asp-action="Contact">
                                <input type="hidden" name="portfolioOwnerEmail" value="@Model.Email" />
                                <input type="hidden" name="portfolioId" value="@Model.Id" />
                                <div class="row">
                                    <div class="col-md-6 mb-3">
                                        <label for="name" class="form-label">Your Name</label>
                                        <input type="text" class="form-control" id="name" name="SenderName" required>
                                    </div>
                                    <div class="col-md-6 mb-3">
                                        <label for="email" class="form-label">Your Email</label>
                                        <input type="email" class="form-control" id="email" name="SenderEmail" required>
                                    </div>
                                </div>
                                <div class="mb-3">
                                    <label for="subject" class="form-label">Subject</label>
                                    <input type="text" class="form-control" id="subject" name="Subject" required>
                                </div>
                                <div class="mb-4">
                                    <label for="message" class="form-label">Message</label>
                                    <textarea class="form-control" id="message" name="Message" rows="5" required></textarea>
                                </div>
                                <button type="submit" class="btn btn-primary w-100">Send Message</button>
                            </form>



                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Footer -->
    <footer>
        <div class="container">
            <div class="row">
                <div class="col-md-4 mb-4 mb-md-0">
                    <h5 class="mb-3">@Model.FirstName @Model.LastName</h5>
                    <p class="text-muted">@Model.Title</p>
                    <div class="social-links mt-3">
                        @if (!string.IsNullOrEmpty(Model.GitHubLink))
                        {
                            <a href="@Model.GitHubLink" class="social-link text-white"><i class="fab fa-github"></i></a>
                        }
                        @if (!string.IsNullOrEmpty(Model.LinkedinLink))
                        {
                            <a href="@Model.LinkedinLink" class="social-link text-white"><i class="fab fa-linkedin-in"></i></a>
                        }
                        @if (!string.IsNullOrEmpty(Model.Email))
                        {
                            <a href="mailto:@Model.Email" class="social-link text-white"><i class="fas fa-envelope"></i></a>
                        }
                    </div>
                </div>
                <div class="col-md-4 mb-4 mb-md-0">
                    <h5 class="mb-3">Quick Links</h5>
                    <div class="footer-links">
                        <a href="#home" class="footer-link">Home</a>
                        <a href="#about" class="footer-link">About</a>
                        <a href="#skills" class="footer-link">Skills</a>
                        <a href="#projects" class="footer-link">Projects</a>
                        <a href="#contact" class="footer-link">Contact</a>
                    </div>
                </div>
                <div class="col-md-4">
                    <h5 class="mb-3">Contact Info</h5>
                    <ul class="list-unstyled">
                        @if (!string.IsNullOrEmpty(Model.Email))
                        {
                            <li class="mb-2"><a href="mailto:@Model.Email" class="footer-link">@Model.Email</a></li>
                        }
                        @if (!string.IsNullOrEmpty(Model.PhoneNumber))
                        {
                            <li class="mb-2">@Model.PhoneNumber</li>
                        }
                        @if (!string.IsNullOrEmpty(Model.Address))
                        {
                            <li>@Model.Address</li>
                        }
                    </ul>
                </div>
            </div>
            <hr class="my-4 bg-secondary">
            <div class="text-center">
                <p class="mb-0">&copy; @DateTime.Now.Year @Model.FirstName @Model.LastName. All rights reserved.</p>
            </div>
        </div>
    </footer>

    <!-- Back to Top Button -->
    <a href="#" class="back-to-top btn btn-primary btn-lg rounded-circle shadow">
        <i class="fas fa-arrow-up"></i>
    </a>

    <!-- Bootstrap 5 JS Bundle with Popper -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Navbar scroll effect
        window.addEventListener('scroll', function() {
            const navbar = document.querySelector('.navbar');
            if (window.scrollY > 50) {
                navbar.classList.add('shadow-sm');
            } else {
                navbar.classList.remove('shadow-sm');
            }
        });

        // Smooth scrolling for navigation links
        document.querySelectorAll('a[href^="#"]').forEach(anchor => {
            anchor.addEventListener('click', function(e) {
                e.preventDefault();

                const targetId = this.getAttribute('href');
                const targetElement = document.querySelector(targetId);

                if (targetElement) {
                    window.scrollTo({
                        top: targetElement.offsetTop - 80,
                        behavior: 'smooth'
                    });

                    // Update active nav link
                    document.querySelectorAll('.nav-link').forEach(link => {
                        link.classList.remove('active');
                    });
                    this.classList.add('active');
                }
            });
        });

        // Update active nav link on scroll
        window.addEventListener('scroll', function() {
            const sections = document.querySelectorAll('section');
            const navLinks = document.querySelectorAll('.nav-link');

            let current = '';

            sections.forEach(section => {
                const sectionTop = section.offsetTop;
                const sectionHeight = section.clientHeight;

                if (pageYOffset >= sectionTop - 200) {
                    current = section.getAttribute('id');
                }
            });

            navLinks.forEach(link => {
                link.classList.remove('active');
                if (link.getAttribute('href') === '#' + current) {
                    link.classList.add('active');
                }
            });
        });

        // Back to top button
        const backToTopButton = document.querySelector('.back-to-top');

        window.addEventListener('scroll', function() {
            if (window.pageYOffset > 300) {
                backToTopButton.style.opacity = '1';
                backToTopButton.style.visibility = 'visible';
            } else {
                backToTopButton.style.opacity = '0';
                backToTopButton.style.visibility = 'hidden';
            }
        });

        backToTopButton.addEventListener('click', function(e) {
            e.preventDefault();
            window.scrollTo({ top: 0, behavior: 'smooth' });
        });

        // Animate skill bars on scroll
        function animateSkills() {
            const skillBars = document.querySelectorAll('.skill-progress');

            skillBars.forEach(bar => {
                const width = bar.parentElement.previousElementSibling.querySelector('span:last-child').textContent.replace('%', '');
                bar.style.width = width + '%';
            });
        }

        // Only animate skills when they come into view
        const skillsObserver = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    animateSkills();
                    skillsObserver.unobserve(entry.target);
                }
            });
        }, { threshold: 0.5 });

        const skillsSection = document.getElementById('skills');
        if (skillsSection) {
            skillsObserver.observe(skillsSection);
        }
    </script>
</body>
</html>