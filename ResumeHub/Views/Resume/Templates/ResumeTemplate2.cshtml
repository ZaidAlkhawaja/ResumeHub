@model ResumeHub.DTOs.ResumeJsonDto
@{
    Layout = "_ResumeLayout";

    ViewData["Title"] = $"{Model.FirstName} {Model.LastName} - Resume";
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Professional Resume</title>
    <!-- Bootstrap 5 CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Bootstrap Icons -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">
    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&family=Playfair+Display:wght@400;500;700&display=swap" rel="stylesheet">
    <!-- Custom CSS -->
    <style>
        :root {
            --primary-color: #4361ee;
            --secondary-color: #3a0ca3;
            --accent-color: #4cc9f0;
            --dark-color: #2b2d42;
            --light-color: #f8f9fa;
            --gray-color: #6c757d;
        }

        body {
            font-family: 'Poppins', sans-serif;
            color: var(--dark-color);
            line-height: 1.6;
            background-color: #f5f7fa;
        }

        .resume-container {
            max-width: 900px;
            margin: 2rem auto;
            background: white;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            border-radius: 15px;
            overflow: hidden;
            position: relative;
        }

        .resume-header {
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            color: white;
            padding: 3rem 2rem;
            text-align: center;
            position: relative;
            overflow: hidden;
        }

            .resume-header::before {
                content: '';
                position: absolute;
                top: -50px;
                right: -50px;
                width: 200px;
                height: 200px;
                background: rgba(255, 255, 255, 0.1);
                border-radius: 50%;
            }

            .resume-header::after {
                content: '';
                position: absolute;
                bottom: -80px;
                left: -80px;
                width: 250px;
                height: 250px;
                background: rgba(255, 255, 255, 0.1);
                border-radius: 50%;
            }

        .name {
            font-family: 'Playfair Display', serif;
            font-size: 2.5rem;
            font-weight: 700;
            margin-bottom: 0.5rem;
            position: relative;
            z-index: 1;
        }

        .title {
            font-size: 1.2rem;
            font-weight: 400;
            opacity: 0.9;
            margin-bottom: 1.5rem;
            position: relative;
            z-index: 1;
        }

        .contact-info {
            display: flex;
            justify-content: center;
            flex-wrap: wrap;
            gap: 1.5rem;
            position: relative;
            z-index: 1;
        }

            .contact-info span {
                display: flex;
                align-items: center;
                gap: 0.5rem;
                font-size: 0.9rem;
            }

        .resume-section {
            padding: 2rem;
            border-bottom: 1px solid rgba(0, 0, 0, 0.05);
        }

            .resume-section:last-child {
                border-bottom: none;
            }

        .section-title {
            font-family: 'Playfair Display', serif;
            color: var(--primary-color);
            font-size: 1.5rem;
            margin-bottom: 1.5rem;
            display: flex;
            align-items: center;
            gap: 0.75rem;
        }

            .section-title i {
                font-size: 1.2rem;
            }

        .experience-item {
            margin-bottom: 2rem;
        }

            .experience-item h3 {
                font-size: 1.1rem;
                font-weight: 600;
                color: var(--dark-color);
                margin-bottom: 0.25rem;
            }

        .company-period {
            display: flex;
            gap: 1rem;
            margin-bottom: 0.75rem;
            font-size: 0.9rem;
            color: var(--gray-color);
        }

        .company {
            font-weight: 500;
            color: var(--secondary-color);
        }

        .duties {
            padding-left: 1.25rem;
            border-left: 2px solid var(--accent-color);
        }

        .skills-container {
            display: flex;
            flex-wrap: wrap;
            gap: 0.75rem;
        }

        .skill-badge {
            background: rgba(67, 97, 238, 0.1);
            color: var(--primary-color);
            padding: 0.5rem 1rem;
            border-radius: 50px;
            font-size: 0.85rem;
            font-weight: 500;
        }

        .education-item {
            margin-bottom: 1.5rem;
        }

            .education-item h3 {
                font-size: 1.1rem;
                font-weight: 600;
                margin-bottom: 0.25rem;
            }

        .institution-period {
            font-size: 0.9rem;
            color: var(--gray-color);
            margin-bottom: 0.5rem;
        }

        /* Animation */
        keyframes fadeIn {
            from

        {
            opacity: 0;
            transform: translateY(20px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }

        }

        .resume-section {
            animation: fadeIn 0.6s ease forwards;
        }

            .resume-section:nth-child(2) {
                animation-delay: 0.1s;
            }

            .resume-section:nth-child(3) {
                animation-delay: 0.2s;
            }

            .resume-section:nth-child(4) {
                animation-delay: 0.3s;
            }
        /* Continue for other sections */

        /* Print Styles */
        media print {
            body {
                background: white !important;
            }

            .resume-container {
                box-shadow: none;
                margin: 0;
                border-radius: 0;
            }

            .no-print {
                display: none !important;
            }
        }
    </style>
</head>
<body>
@*     @RenderBody()
 *@    <div class="resume-container">
        <div class="resume-header">
            <h1 class="name">@Model.FirstName @Model.LastName</h1>
            @if (!string.IsNullOrWhiteSpace(Model.Title))
            {
                <h2 class="title">@Model.Title</h2>
            }
            <div class="contact-info">
                @if (!string.IsNullOrWhiteSpace(Model.Email))
                {
                    <span><i class="bi bi-envelope"></i> @Model.Email</span>
                }
                @if (!string.IsNullOrWhiteSpace(Model.PhoneNumber))
                {
                    <span><i class="bi bi-phone"></i> @Model.PhoneNumber</span>
                }
                @if (!string.IsNullOrWhiteSpace(Model.LinkedinLink))
                {
                    <span><i class="bi bi-linkedin"></i> @Model.LinkedinLink</span>
                }
                @if (!string.IsNullOrWhiteSpace(Model.GitHubLink))
                {
                    <span><i class="bi bi-github"></i> @Model.GitHubLink</span>
                }
            </div>
        </div>

        @if (!string.IsNullOrWhiteSpace(Model.Summary))
        {
            <div class="resume-section">
                <h2 class="section-title"><i class="bi bi-person-lines-fill"></i> Professional Summary</h2>
                <div class="section-content">
                    <p>@Model.Summary</p>
                </div>
            </div>
        }

        @if (Model.Experiences.Any())
        {
            <div class="resume-section">
                <h2 class="section-title"><i class="bi bi-briefcase"></i> Work Experience</h2>
                <div class="section-content">
                    @foreach (var exp in Model.Experiences)
                    {
                        <div class="experience-item">
                            <h3>@exp.Title</h3>
                            <div class="company-period">
                                <span class="company">@exp.Company</span>
@*                                <span class="period">@exp.StartDate - @(exp.IsCurrent ? "Present" : exp.EndDate)</span>
 *@                            </div>
                            @if (!string.IsNullOrWhiteSpace(exp.Duties))
                            {
                                <div class="duties">@exp.Duties</div>
                            }
                        </div>
                    }
                </div>
            </div>
        }

        @if (Model.Educations.Any())
        {
            <div class="resume-section">
                <h2 class="section-title"><i class="bi bi-mortarboard"></i> Education</h2>
                <div class="section-content">
                    @foreach (var edu in Model.Educations)
                    {
                        <div class="education-item">
                            <h3>@edu.DegreeField @(!string.IsNullOrWhiteSpace(edu.Major) ? $"in {edu.Major}" : "")</h3>
                            <div class="institution-period">
                                <span class="institution">@edu.CollegeName</span>
                                <span class="period">@edu.StartDate - @edu.EndDate</span>
                            </div>
                            @if (edu.GPA.HasValue)
                            {
                                <div class="gpa">GPA: @edu.GPA.Value.ToString("0.00")</div>
                            }
                        </div>
                    }
                </div>
            </div>
        }

        @if (Model.Skills.Any())
        {
            <div class="resume-section">
                <h2 class="section-title"><i class="bi bi-tools"></i> Skills</h2>
                <div class="section-content">
                    <div class="skills-container">
                        @foreach (var skill in Model.Skills)
                        {
                            <div class="skill-badge">@skill.SkillName</div>
                        }
                    </div>
                </div>
            </div>
        }

        @if (Model.Projects.Any())
        {
            <div class="resume-section">
                <h2 class="section-title"><i class="bi bi-code-square"></i> Projects</h2>
                <div class="section-content">
                    @foreach (var project in Model.Projects)
                    {
                        <div class="experience-item">
                            <h3>@project.ProjectName</h3>
                            <div class="company-period">
                                <span class="period">@project.StartDate - @project.EndDate</span>
                                @if (!string.IsNullOrWhiteSpace(project.ProjectLink))
                                {
                                    <span><a href="@project.ProjectLink" target="_blank">View Project</a></span>
                                }
                            </div>
                            <div class="duties">@project.ProjectDescription</div>
                        </div>
                    }
                </div>
            </div>
        }

        @if (Model.Certificates.Any())
        {
            <div class="resume-section">
                <h2 class="section-title"><i class="bi bi-award"></i> Certifications</h2>
                <div class="section-content">
                    @foreach (var cert in Model.Certificates)
                    {
                        <div class="education-item">
                            <h3>@cert.Field</h3>
                            <div class="institution-period">
                                <span class="institution">@cert.ProviderName</span>
                                <span class="period">@cert.StartDate - @cert.EndDate</span>
                            </div>
                        </div>
                    }
                </div>
            </div>
        }
    </div>
    <!-- Print Button -->
    <div class="no-print text-center mt-3 mb-5">
        <button id="printResume" class="btn btn-primary">
            <i class="bi bi-printer"></i> Print Resume
        </button>
    </div>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>

    <!-- Custom JS -->
    <script>
        // Print functionality
        document.getElementById('printResume').addEventListener('click', function() {
            window.print();
        });

        // Animation trigger
        document.addEventListener('DOMContentLoaded', function() {
            const sections = document.querySelectorAll('.resume-section');
            sections.forEach((section, index) => {
                section.style.animationDelay = `${index * 0.1}s`;
            });
        });
    </script>
</body>
</html>