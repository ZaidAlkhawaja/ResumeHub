@model ResumeHub.DTOs.ResumeJsonDto
@{
    Layout = "_ResumeLayout";

    ViewData["Title"] = $"{Model.FirstName} {Model.LastName} - Resume";
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Creative Resume</title>
    <!-- Bootstrap 5 CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Bootstrap Icons -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">
    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@300;400;500;600;700&family=Space+Grotesk:wght@400;500;600&display=swap" rel="stylesheet">
    <!-- AOS Animation -->
    <link href="https://unpkg.com/aos@2.3.1/dist/aos.css" rel="stylesheet">
    <style>
        :root {
            --primary: #6C63FF;
            --primary-light: #A5A2FF;
            --secondary: #FF6584;
            --dark: #2D2D2D;
            --light: #F8F9FF;
            --gray: #6C757D;
            --bg-gradient: linear-gradient(135deg, #F8F9FF 0%, #E9ECFF 100%);
        }

        body {
            font-family: 'Montserrat', sans-serif;
            background: var(--bg-gradient);
            color: var(--dark);
            min-height: 100vh;
            overflow-x: hidden;
        }

        .creative-resume {
            display: grid;
            grid-template-columns: 300px 1fr;
            max-width: 1000px;
            margin: 2rem auto;
            box-shadow: 0 15px 40px rgba(0, 0, 0, 0.12);
            border-radius: 20px;
            overflow: hidden;
            background: white;
            position: relative;
        }

        .sidebar {
            background: var(--primary);
            color: white;
            padding: 2.5rem;
            position: relative;
            z-index: 1;
        }

            .sidebar::before {
                content: '';
                position: absolute;
                top: 0;
                right: 0;
                width: 100%;
                height: 100%;
                background: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100" preserveAspectRatio="none"><path fill="rgba(255,255,255,0.05)" d="M0,0 L100,0 L100,100 Q50,80 0,100 Z"></path></svg>');
                background-size: 100% auto;
                background-repeat: no-repeat;
                background-position: bottom right;
                z-index: -1;
            }

        .profile-img {
            width: 150px;
            height: 150px;
            border-radius: 50%;
            border: 5px solid rgba(255, 255, 255, 0.2);
            margin: 0 auto 1.5rem;
            overflow: hidden;
            background: #eee;
            display: flex;
            align-items: center;
            justify-content: center;
        }

            .profile-img i {
                font-size: 4rem;
                color: var(--primary);
            }

        .name {
            font-family: 'Space Grotesk', sans-serif;
            font-size: 1.8rem;
            font-weight: 700;
            margin-bottom: 0.5rem;
            text-align: center;
        }

        .title {
            font-size: 1rem;
            opacity: 0.9;
            margin-bottom: 2rem;
            text-align: center;
            font-weight: 400;
        }

        .sidebar-section {
            margin-bottom: 2rem;
        }

        .sidebar-title {
            font-family: 'Space Grotesk', sans-serif;
            font-size: 1.2rem;
            font-weight: 600;
            margin-bottom: 1rem;
            display: flex;
            align-items: center;
            gap: 0.5rem;
            border-bottom: 2px solid rgba(255, 255, 255, 0.2);
            padding-bottom: 0.5rem;
        }

            .sidebar-title i {
                font-size: 1rem;
            }

        .contact-item {
            display: flex;
            align-items: center;
            gap: 0.75rem;
            margin-bottom: 0.75rem;
            font-size: 0.9rem;
        }

        .skill-item {
            margin-bottom: 1rem;
        }

        .skill-name {
            display: flex;
            justify-content: space-between;
            margin-bottom: 0.3rem;
            font-size: 0.85rem;
        }

        .skill-bar {
            height: 6px;
            background: rgba(255, 255, 255, 0.2);
            border-radius: 3px;
            overflow: hidden;
        }

        .skill-progress {
            height: 100%;
            background: white;
            border-radius: 3px;
        }

        .main-content {
            padding: 2.5rem;
        }

        .section {
            margin-bottom: 2.5rem;
        }

        .section-title {
            font-family: 'Space Grotesk', sans-serif;
            font-size: 1.4rem;
            font-weight: 600;
            color: var(--primary);
            margin-bottom: 1.5rem;
            position: relative;
            display: inline-block;
        }

            .section-title::after {
                content: '';
                position: absolute;
                bottom: -5px;
                left: 0;
                width: 50px;
                height: 3px;
                background: var(--secondary);
            }

        .experience-item {
            margin-bottom: 1.5rem;
            position: relative;
            padding-left: 1.5rem;
            border-left: 2px solid var(--primary-light);
        }

            .experience-item::before {
                content: '';
                position: absolute;
                left: -6px;
                top: 5px;
                width: 10px;
                height: 10px;
                border-radius: 50%;
                background: var(--primary);
            }

        .job-title {
            font-weight: 600;
            font-size: 1.1rem;
            margin-bottom: 0.25rem;
        }

        .company {
            font-weight: 500;
            color: var(--primary);
            margin-bottom: 0.25rem;
        }

        .period {
            font-size: 0.85rem;
            color: var(--gray);
            margin-bottom: 0.5rem;
            display: block;
        }

        .job-description {
            font-size: 0.95rem;
            line-height: 1.6;
        }

        .education-item {
            margin-bottom: 1.5rem;
        }

        .degree {
            font-weight: 600;
            margin-bottom: 0.25rem;
        }

        .institution {
            font-weight: 500;
            color: var(--primary);
            margin-bottom: 0.25rem;
        }

        .tags {
            display: flex;
            flex-wrap: wrap;
            gap: 0.5rem;
            margin-top: 1rem;
        }

        .tag {
            background: rgba(108, 99, 255, 0.1);
            color: var(--primary);
            padding: 0.35rem 0.75rem;
            border-radius: 50px;
            font-size: 0.8rem;
            font-weight: 500;
        }

        .floating-shape {
            position: absolute;
            opacity: 0.05;
            z-index: 0;
        }

        .shape-1 {
            top: 50px;
            right: 50px;
            width: 150px;
            height: 150px;
            background: var(--primary);
            border-radius: 30% 70% 70% 30% / 30% 30% 70% 70%;
        }

        .print-btn {
            position: fixed;
            bottom: 30px;
            right: 30px;
            background: var(--primary);
            color: white;
            width: 50px;
            height: 50px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            box-shadow: 0 5px 15px rgba(108, 99, 255, 0.3);
            cursor: pointer;
            z-index: 100;
            transition: all 0.3s ease;
        }

            .print-btn:hover {
                transform: translateY(-3px);
                box-shadow: 0 8px 20px rgba(108, 99, 255, 0.4);
            }

        media (max-width: 768px) {
            .creative-resume

        {
            grid-template-columns: 1fr;
        }

        .sidebar {
            padding: 2rem;
        }

        .main-content {
            padding: 2rem;
        }

        }

        media print {
            body

        {
            background: white !important;
        }

        .creative-resume {
            box-shadow: none;
            margin: 0;
            border-radius: 0;
        }

        .print-btn {
            display: none;
        }

        }
    </style>
</head>
<body>
   @*  @RenderBody() *@

<div class="creative-resume">
    <!-- Sidebar -->
    <div class="sidebar">
        <div class="profile-img">
            <i class="bi bi-person-circle"></i>
        </div>
        
        <h1 class="name">@Model.FirstName @Model.LastName</h1>
        @if (!string.IsNullOrWhiteSpace(Model.Title))
        {
            <div class="title">@Model.Title</div>
        }
        
        <!-- Contact Info -->
        <div class="sidebar-section">
            <h2 class="sidebar-title"><i class="bi bi-person-lines-fill"></i> Contact</h2>
            @if (!string.IsNullOrWhiteSpace(Model.Email))
            {
                <div class="contact-item">
                    <i class="bi bi-envelope"></i>
                    <span>@Model.Email</span>
                </div>
            }
            @if (!string.IsNullOrWhiteSpace(Model.PhoneNumber))
            {
                <div class="contact-item">
                    <i class="bi bi-phone"></i>
                    <span>@Model.PhoneNumber</span>
                </div>
            }
            @if (!string.IsNullOrWhiteSpace(Model.LinkedinLink))
            {
                <div class="contact-item">
                    <i class="bi bi-linkedin"></i>
                    <span>@Model.LinkedinLink</span>
                </div>
            }
            @if (!string.IsNullOrWhiteSpace(Model.GitHubLink))
            {
                <div class="contact-item">
                    <i class="bi bi-github"></i>
                    <span>@Model.GitHubLink</span>
                </div>
            }
        </div>
        
        <!-- Skills -->
        @if (Model.Skills.Any())
        {
            <div class="sidebar-section">
                <h2 class="sidebar-title"><i class="bi bi-tools"></i> Skills</h2>
                @foreach (var skill in Model.Skills)
                {
                    <div class="skill-item">
                        <div class="skill-name">
                            <span>@skill.SkillName</span>
                            <span>@skill.SkillType</span>
                        </div>
                        <div class="skill-bar">
                            <div class="skill-progress" style="width: @skill.SkillType"></div>
                        </div>
                    </div>
                }
            </div>
        }
        
        <!-- Languages -->
        @if (Model.Languages.Any())
        {
            <div class="sidebar-section">
                <h2 class="sidebar-title"><i class="bi bi-globe2"></i> Languages</h2>
                @foreach (var lang in Model.Languages)
                {
                    <div class="skill-item">
                        <div class="skill-name">
                            <span>@lang.LanguageName</span>
                            <span>@lang.Level</span>
                        </div>
                        <div class="skill-bar">
                            <div class="skill-progress" style="width: @(lang.Level switch {
                                "Native" => "100",
                                "Fluent" => "80",
                                "Intermediate" => "60",
                                "Basic" => "40",
                                _ => "30"
                            })%"></div>
                        </div>
                    </div>
                }
            </div>
        }
    </div>
    
    <!-- Main Content -->
    <div class="main-content">
        <!-- About -->
        @if (!string.IsNullOrWhiteSpace(Model.Summary))
        {
            <div class="section" data-aos="fade-up">
                <h2 class="section-title">About Me</h2>
                <p class="job-description">@Model.Summary</p>
            </div>
        }
        
        <!-- Experience -->
        @if (Model.Experiences.Any())
        {
            <div class="section" data-aos="fade-up">
                <h2 class="section-title">Experience</h2>
                @foreach (var exp in Model.Experiences)
                {
                    <div class="experience-item">
                        <h3 class="job-title">@exp.Title</h3>
                        <span class="company">@exp.Company</span>
    @*                         <span class="period">@exp.StartDate - @(exp.IsCurrent ? "Present" : exp.EndDate)</span>
     *@                        @if (!string.IsNullOrWhiteSpace(exp.Duties))
                        {
                            <p class="job-description">@exp.Duties</p>
                        }
                    </div>
                }
            </div>
        }
        
        <!-- Education -->
        @if (Model.Educations.Any())
        {
            <div class="section" data-aos="fade-up">
                <h2 class="section-title">Education</h2>
                @foreach (var edu in Model.Educations)
                {
                    <div class="education-item">
                        <h3 class="degree">@edu.DegreeField @(!string.IsNullOrWhiteSpace(edu.Major) ? $"in {edu.Major}" : "")</h3>
                        <span class="institution">@edu.CollegeName</span>
                        <span class="period">@edu.StartDate - @edu.EndDate</span>
                        @if (edu.GPA.HasValue)
                        {
                            <span class="period">GPA: @edu.GPA.Value.ToString("0.00")</span>
                        }
                    </div>
                }
            </div>
        }
        
        <!-- Projects -->
        @if (Model.Projects.Any())
        {
            <div class="section" data-aos="fade-up">
                <h2 class="section-title">Projects</h2>
                @foreach (var project in Model.Projects)
                {
                    <div class="experience-item">
                        <h3 class="job-title">@project.ProjectName</h3>
                        <span class="period">@project.StartDate - @project.EndDate</span>
                        <p class="job-description">@project.ProjectDescription</p>
                        @if (!string.IsNullOrWhiteSpace(project.ProjectLink))
                        {
                            <a href="@project.ProjectLink" target="_blank" class="tag">
                                <i class="bi bi-link-45deg"></i> View Project
                            </a>
                        }
                    </div>
                }
            </div>
        }
        
        <!-- Certifications -->
        @if (Model.Certificates.Any())
        {
            <div class="section" data-aos="fade-up">
                <h2 class="section-title">Certifications</h2>
                <div class="tags">
                    @foreach (var cert in Model.Certificates)
                    {
                        <span class="tag">@cert.Field (@cert.ProviderName)</span>
                    }
                </div>
            </div>
        }
    </div>
</div>

    <!-- Print Button -->
    <div class="print-btn" id="printBtn">
        <i class="bi bi-printer-fill"></i>
    </div>

    <!-- AOS Animation JS -->
    <script src="https://unpkg.com/aos@2.3.1/dist/aos.js"></script>
    <!-- Custom JS -->
    <script>
        // Initialize animations
        AOS.init({
            duration: 800,
            easing: 'ease-in-out',
            once: true
        });

        // Print functionality
        document.getElementById('printBtn').addEventListener('click', function() {
            window.print();
        });

        // Generate random shapes
        document.addEventListener('DOMContentLoaded', function() {
            const colors = ['#6C63FF', '#FF6584', '#4CC9F0'];
            const shapes = ['circle', 'square', 'triangle', 'blob'];

            for (let i = 0; i < 5; i++) {
                const shape = document.createElement('div');
                shape.className = 'floating-shape';

                // Random properties
                const size = Math.random() * 100 + 50;
                const color = colors[Math.floor(Math.random() * colors.length)];
                const left = Math.random() * 100;
                const top = Math.random() * 100;
                const rotation = Math.random() * 360;

                shape.style.width = `${size}px`;
                shape.style.height = `${size}px`;
                shape.style.background = color;
                shape.style.left = `${left}%`;
                shape.style.top = `${top}px`;
                shape.style.transform = `rotate(${rotation}deg)`;
                shape.style.opacity = '0.05';

                // Random shape
                if (Math.random() > 0.5) {
                    shape.style.borderRadius = '50%';
                } else {
                    shape.style.borderRadius = `${Math.random() * 50}% ${Math.random() * 50}% ${Math.random() * 50}% ${Math.random() * 50}% / ${Math.random() * 50}% ${Math.random() * 50}% ${Math.random() * 50}% ${Math.random() * 50}%`;
                }

                document.body.appendChild(shape);
            }
        });
    </script>
</body>
</html>